{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":31,"status":"ok","timestamp":1663410446935,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"UJy2PD8YxXjv","outputId":"5dc1a692-f827-45d0-b247-35f6307ed83f"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/plantdoc\n"]}],"source":["%cd /content/drive/MyDrive/plantdoc"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6359,"status":"ok","timestamp":1663410453267,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"jKYuAyb6x38_","outputId":"81d39782-63d5-4cf8-a16c-c9d0b57041da"},"outputs":[{"name":"stdout","output_type":"stream","text":["fatal: destination path 'yolov5' already exists and is not an empty directory.\n","/content/drive/MyDrive/plantdoc/yolov5\n","Checking out files: 100% (111/111), done.\n","HEAD is now at fbe67e4 Fix `OMP_NUM_THREADS=1` for macOS (#8624)\n"]}],"source":["# clone YOLOv5 repository\n","!git clone https://github.com/ultralytics/yolov5  # clone repo\n","%cd yolov5\n","!git reset --hard fbe67e465375231474a2ad80a4389efc77ecff99"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9156,"status":"ok","timestamp":1663410462419,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"bg7uRyQ1x7MO","outputId":"cbc97dad-1b68-4a7c-817a-83fc8d714dab"},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[?25l\r\u001b[K     |▏                               | 10 kB 25.5 MB/s eta 0:00:01\r\u001b[K     |▍                               | 20 kB 4.5 MB/s eta 0:00:01\r\u001b[K     |▋                               | 30 kB 6.5 MB/s eta 0:00:01\r\u001b[K     |▉                               | 40 kB 3.7 MB/s eta 0:00:01\r\u001b[K     |█                               | 51 kB 4.0 MB/s eta 0:00:01\r\u001b[K     |█▎                              | 61 kB 4.8 MB/s eta 0:00:01\r\u001b[K     |█▌                              | 71 kB 4.7 MB/s eta 0:00:01\r\u001b[K     |█▊                              | 81 kB 4.7 MB/s eta 0:00:01\r\u001b[K     |█▉                              | 92 kB 5.2 MB/s eta 0:00:01\r\u001b[K     |██                              | 102 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██▎                             | 112 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██▌                             | 122 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██▊                             | 133 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███                             | 143 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███▏                            | 153 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███▍                            | 163 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███▌                            | 174 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███▊                            | 184 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████                            | 194 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████▏                           | 204 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████▍                           | 215 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████▋                           | 225 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████▉                           | 235 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████                           | 245 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████▎                          | 256 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████▍                          | 266 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████▋                          | 276 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████▉                          | 286 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████                          | 296 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████▎                         | 307 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████▌                         | 317 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████▊                         | 327 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████                         | 337 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████                         | 348 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████▎                        | 358 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████▌                        | 368 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████▊                        | 378 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████                        | 389 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████▏                       | 399 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████▍                       | 409 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████▋                       | 419 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████▉                       | 430 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████                       | 440 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████▏                      | 450 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████▍                      | 460 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████▋                      | 471 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████▉                      | 481 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████                      | 491 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████▎                     | 501 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████▌                     | 512 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████▋                     | 522 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████▉                     | 532 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████                     | 542 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████▎                    | 552 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████▌                    | 563 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████▊                    | 573 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████                    | 583 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████▏                   | 593 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████▍                   | 604 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████▌                   | 614 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 624 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████                   | 634 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████▏                  | 645 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████▍                  | 655 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████▋                  | 665 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████▉                  | 675 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 686 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████▏                 | 696 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████▍                 | 706 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████▋                 | 716 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████▉                 | 727 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████                 | 737 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████▎                | 747 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████▌                | 757 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████▊                | 768 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████                | 778 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████                | 788 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████▎               | 798 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████▌               | 808 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████▊               | 819 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████               | 829 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████▏              | 839 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████▍              | 849 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████▋              | 860 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 870 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████              | 880 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████▏             | 890 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████▍             | 901 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████▋             | 911 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████▉             | 921 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 931 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████▎            | 942 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████▌            | 952 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████▋            | 962 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████▉            | 972 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████            | 983 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████▎           | 993 kB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████▌           | 1.0 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████▊           | 1.0 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████           | 1.0 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▏          | 1.0 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▎          | 1.0 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▌          | 1.1 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████▊          | 1.1 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████          | 1.1 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▏         | 1.1 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▍         | 1.1 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▋         | 1.1 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████▉         | 1.1 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████         | 1.1 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▏        | 1.1 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▍        | 1.1 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▋        | 1.2 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████▉        | 1.2 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 1.2 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▎       | 1.2 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▌       | 1.2 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▊       | 1.2 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████▉       | 1.2 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████       | 1.2 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▎      | 1.2 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▌      | 1.2 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▊      | 1.3 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████      | 1.3 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▏     | 1.3 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▍     | 1.3 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▌     | 1.3 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▊     | 1.3 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████     | 1.3 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▏    | 1.3 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▍    | 1.3 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▋    | 1.4 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▉    | 1.4 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████    | 1.4 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▎   | 1.4 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▍   | 1.4 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▋   | 1.4 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████▉   | 1.4 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████   | 1.4 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▎  | 1.4 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▌  | 1.4 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▊  | 1.5 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 1.5 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████  | 1.5 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▎ | 1.5 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▌ | 1.5 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▊ | 1.5 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████ | 1.5 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▏| 1.5 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▍| 1.5 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▋| 1.5 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▉| 1.6 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 1.6 MB 4.6 MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 1.6 MB 4.6 MB/s \n","\u001b[?25hSetup complete. Using torch 1.12.1+cu113 _CudaDeviceProperties(name='Tesla T4', major=7, minor=5, total_memory=15109MB, multi_processor_count=40)\n"]}],"source":["# install dependencies as necessary\n","!pip install -qr requirements.txt  # install dependencies (ignore errors)\n","import torch\n","\n","from IPython.display import Image, clear_output  # to display images\n","from utils.downloads import attempt_download  # to download models/datasets\n","\n","# clear_output()\n","print('Setup complete. Using torch %s %s' % (torch.__version__, torch.cuda.get_device_properties(0) if torch.cuda.is_available() else 'CPU'))"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11435,"status":"ok","timestamp":1663410473837,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"pq3b1aNLx_HH","outputId":"0a01b9e0-176a-48a4-a257-53153534064f"},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[K     |████████████████████████████████| 145 kB 4.7 MB/s \n","\u001b[K     |████████████████████████████████| 178 kB 43.5 MB/s \n","\u001b[K     |████████████████████████████████| 1.1 MB 67.4 MB/s \n","\u001b[K     |████████████████████████████████| 67 kB 7.4 MB/s \n","\u001b[K     |████████████████████████████████| 54 kB 3.3 MB/s \n","\u001b[K     |████████████████████████████████| 138 kB 71.3 MB/s \n","\u001b[K     |████████████████████████████████| 62 kB 1.7 MB/s \n","\u001b[?25h  Building wheel for roboflow (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for wget (setup.py) ... \u001b[?25l\u001b[?25hdone\n","upload and label your dataset, and get an API KEY here: https://app.roboflow.com/?model=yolov5\u0026ref=roboflow-yolov5\n"]}],"source":["#follow the link below to get your download code from from Roboflow\n","!pip install -q roboflow\n","from roboflow import Roboflow\n","rf = Roboflow(model_format=\"yolov5\", notebook=\"roboflow-yolov5\")"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":662035,"status":"ok","timestamp":1663411135830,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"IZdH_G2nyCYx","outputId":"2f76cf5c-452f-40a2-cb5f-5caa7279a37f"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/plantdoc/yolov5\n","Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: roboflow in /usr/local/lib/python3.7/dist-packages (0.2.15)\n","Requirement already satisfied: glob2 in /usr/local/lib/python3.7/dist-packages (from roboflow) (0.7)\n","Requirement already satisfied: cycler==0.10.0 in /usr/local/lib/python3.7/dist-packages (from roboflow) (0.10.0)\n","Requirement already satisfied: chardet==4.0.0 in /usr/local/lib/python3.7/dist-packages (from roboflow) (4.0.0)\n","Requirement already satisfied: Pillow\u003e=7.1.2 in /usr/local/lib/python3.7/dist-packages (from roboflow) (7.1.2)\n","Requirement already satisfied: requests-toolbelt in /usr/local/lib/python3.7/dist-packages (from roboflow) (0.9.1)\n","Requirement already satisfied: certifi==2021.5.30 in /usr/local/lib/python3.7/dist-packages (from roboflow) (2021.5.30)\n","Requirement already satisfied: PyYAML\u003e=5.3.1 in /usr/local/lib/python3.7/dist-packages (from roboflow) (6.0)\n","Requirement already satisfied: urllib3==1.26.6 in /usr/local/lib/python3.7/dist-packages (from roboflow) (1.26.6)\n","Requirement already satisfied: kiwisolver==1.3.1 in /usr/local/lib/python3.7/dist-packages (from roboflow) (1.3.1)\n","Requirement already satisfied: idna==2.10 in /usr/local/lib/python3.7/dist-packages (from roboflow) (2.10)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from roboflow) (1.15.0)\n","Requirement already satisfied: python-dotenv in /usr/local/lib/python3.7/dist-packages (from roboflow) (0.21.0)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from roboflow) (3.2.2)\n","Requirement already satisfied: pyparsing==2.4.7 in /usr/local/lib/python3.7/dist-packages (from roboflow) (2.4.7)\n","Requirement already satisfied: wget in /usr/local/lib/python3.7/dist-packages (from roboflow) (3.2)\n","Requirement already satisfied: opencv-python-headless\u003e=4.5.1.48 in /usr/local/lib/python3.7/dist-packages (from roboflow) (4.6.0.66)\n","Requirement already satisfied: numpy\u003e=1.18.5 in /usr/local/lib/python3.7/dist-packages (from roboflow) (1.21.6)\n","Requirement already satisfied: tqdm\u003e=4.41.0 in /usr/local/lib/python3.7/dist-packages (from roboflow) (4.64.1)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.7/dist-packages (from roboflow) (2.8.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from roboflow) (2.28.1)\n","Requirement already satisfied: charset-normalizer\u003c3,\u003e=2 in /usr/local/lib/python3.7/dist-packages (from requests-\u003eroboflow) (2.1.1)\n","loading Roboflow workspace...\n","loading Roboflow project...\n","Downloading Dataset Version Zip in mosaic_inovation2-1 to yolov5pytorch: 100% [155209283 / 155209283] bytes\n"]},{"name":"stderr","output_type":"stream","text":["Extracting Dataset Version Zip to mosaic_inovation2-1 in yolov5pytorch:: 100%|██████████| 4658/4658 [10:27\u003c00:00,  7.42it/s]\n"]}],"source":["%cd /content/drive/MyDrive/plantdoc/yolov5\n","#after following the link above, recieve python code with these fields filled in\n","!pip install roboflow\n","\n","from roboflow import Roboflow\n","rf = Roboflow(api_key=\"p6pCWUdR4fy5AqbaRV9K\")\n","project = rf.workspace(\"xi-tan\").project(\"mosaic_inovation2\")\n","dataset = project.version(1).download(\"yolov5\")\n"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":30,"status":"ok","timestamp":1663411135831,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"KCqfwOkbyKhr","outputId":"d0e4c705-3116-41a1-ff04-3e66513e106f"},"outputs":[{"name":"stdout","output_type":"stream","text":["names:\n","- '0'\n","- '1'\n","- '10'\n","- '11'\n","- '12'\n","- '13'\n","- '14'\n","- '15'\n","- '16'\n","- '17'\n","- '18'\n","- '19'\n","- '2'\n","- '20'\n","- '21'\n","- '22'\n","- '23'\n","- '24'\n","- '25'\n","- '26'\n","- '27'\n","- '28'\n","- '29'\n","- '3'\n","- '4'\n","- '5'\n","- '6'\n","- '7'\n","- '8'\n","- '9'\n","nc: 30\n","train: mosaic_inovation2-1/train/images\n","val: mosaic_inovation2-1/valid/images\n"]}],"source":["# this is the YAML file Roboflow wrote for us that we're loading into this notebook with our data\n","%cat {dataset.location}/data.yaml"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"zJu74GlCyQZ_"},"outputs":[],"source":["# define number of classes based on YAML\n","import yaml\n","with open(dataset.location + \"/data.yaml\", 'r') as stream:\n","    num_classes = str(yaml.safe_load(stream)['nc'])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"mtH7RhvIyTSB"},"outputs":[],"source":["#this is the model configuration we will use for our tutorial \n","%cat /content/drive/MyDrive/plantdoc/yolov5/models/yolov5s.yaml"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":19,"status":"ok","timestamp":1663411135834,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"XlH8o3i-ydcd"},"outputs":[],"source":["#customize iPython writefile so we can write variables\n","from IPython.core.magic import register_line_cell_magic\n","\n","@register_line_cell_magic\n","def writetemplate(line, cell):\n","    with open(line, 'w') as f:\n","        f.write(cell.format(**globals()))"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":18,"status":"ok","timestamp":1663411135834,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"p1pZXFZdyiOh"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":302,"status":"ok","timestamp":1663411136118,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"uDxebz13RdRA"},"outputs":[],"source":["%%writetemplate /content/drive/MyDrive/plantdoc/yolov5/models/custom_yolov5s.yaml\n","\n","# parameters\n","nc: {num_classes}  # number of classes\n","depth_multiple: 0.33  # model depth multiple\n","width_multiple: 0.50  # layer channel multiple\n","\n","# anchors\n","anchors:\n","  - [10,13, 16,30, 33,23]  # P3/8\n","  - [30,61, 62,45, 59,119]  # P4/16\n","  - [116,90, 156,198, 373,326]  # P5/32\n","\n","# YOLOv5 backbone\n","backbone:\n","  # [from, number, module, args]\n","  [[-1, 1, Focus, [64, 3]],  # 0-P1/2\n","   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4\n","   [-1, 3, BottleneckCSP, [128]],\n","   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8\n","   [-1, 9, BottleneckCSP, [256]],\n","   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16\n","   [-1, 9, BottleneckCSP, [512]],\n","   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32\n","   [-1, 1, SPP, [1024, [5, 9, 13]]],\n","   [-1, 3, BottleneckCSP, [1024, False]],  # 9\n","  ]\n","\n","# YOLOv5 head\n","head:\n","  [[-1, 1, Conv, [512, 1, 1]],\n","   [-1, 1, nn.Upsample, [None, 2, 'nearest']],\n","   [[-1, 6], 1, Concat, [1]],  # cat backbone P4\n","   [-1, 3, BottleneckCSP, [512, False]],  # 13\n","\n","   [-1, 1, Conv, [256, 1, 1]],\n","   [-1, 1, nn.Upsample, [None, 2, 'nearest']],\n","   [[-1, 4], 1, Concat, [1]],  # cat backbone P3\n","   [-1, 3, BottleneckCSP, [256, False]],  # 17 (P3/8-small)\n","\n","   [-1, 1, Conv, [256, 3, 2]],\n","   [[-1, 14], 1, Concat, [1]],  # cat head P4\n","   [-1, 3, BottleneckCSP, [512, False]],  # 20 (P4/16-medium)\n","\n","   [-1, 1, Conv, [512, 3, 2]],\n","   [[-1, 10], 1, Concat, [1]],  # cat head P5\n","   [-1, 3, BottleneckCSP, [1024, False]],  # 23 (P5/32-large)\n","\n","   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)\n","  ]"]},{"cell_type":"markdown","metadata":{"id":"VUOiNLtMP5aG"},"source":["# Train Custom YOLOv5 Detector\n","\n","### Next, we'll fire off training!\n","\n","\n","Here, we are able to pass a number of arguments:\n","- **img:** define input image size\n","- **batch:** determine batch size\n","- **epochs:** define the number of training epochs. (Note: often, 3000+ are common here!)\n","- **data:** set the path to our yaml file\n","- **cfg:** specify our model configuration\n","- **weights:** specify a custom path to weights. (Note: you can download weights from the Ultralytics Google Drive [folder](https://drive.google.com/open?id=1Drs_Aiu7xx6S-ix95f9kNsA6ueKRpN2J))\n","- **name:** result names\n","- **nosave:** only save the final checkpoint\n","- **cache:** cache images for faster training"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":412132,"status":"ok","timestamp":1663411548246,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"X3W822Iby1RC","outputId":"401556a3-d40a-49a7-d7d6-e46fec31b5ab"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/plantdoc/yolov5\n","\u001b[34m\u001b[1mtrain: \u001b[0mweights=, cfg=./models/custom_yolov5s.yaml, data=/content/drive/MyDrive/plantdoc/yolov5/mosaic_inovation2-1/data.yaml, hyp=data/hyps/hyp.scratch-low.yaml, epochs=10, batch_size=16, imgsz=416, rect=False, resume=False, nosave=False, noval=False, noautoanchor=False, noplots=False, evolve=None, bucket=, cache=ram, image_weights=False, device=, multi_scale=False, single_cls=False, optimizer=SGD, sync_bn=False, workers=8, project=runs/train, name=yolov5s_results, exist_ok=False, quad=False, cos_lr=False, label_smoothing=0.0, patience=100, freeze=[0], save_period=-1, seed=0, local_rank=-1, entity=None, upload_dataset=False, bbox_interval=-1, artifact_alias=latest\n","\u001b[34m\u001b[1mgithub: \u001b[0m⚠️ YOLOv5 is out of date by 219 commits. Use `git pull` or `git clone https://github.com/ultralytics/yolov5` to update.\n","YOLOv5 🚀 v6.1-306-gfbe67e4 Python-3.7.14 torch-1.12.1+cu113 CUDA:0 (Tesla T4, 15110MiB)\n","\n","\u001b[34m\u001b[1mhyperparameters: \u001b[0mlr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=0.05, cls=0.5, cls_pw=1.0, obj=1.0, obj_pw=1.0, iou_t=0.2, anchor_t=4.0, fl_gamma=0.0, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.0, copy_paste=0.0\n","\u001b[34m\u001b[1mWeights \u0026 Biases: \u001b[0mrun 'pip install wandb' to automatically track and visualize YOLOv5 🚀 runs (RECOMMENDED)\n","\u001b[34m\u001b[1mTensorBoard: \u001b[0mStart with 'tensorboard --logdir runs/train', view at http://localhost:6006/\n","Downloading https://ultralytics.com/assets/Arial.ttf to /root/.config/Ultralytics/Arial.ttf...\n","100% 755k/755k [00:00\u003c00:00, 17.3MB/s]\n","\n","                 from  n    params  module                                  arguments                     \n","  0                -1  1      3520  models.common.Focus                     [3, 32, 3]                    \n","  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]                \n","  2                -1  1     19904  models.common.BottleneckCSP             [64, 64, 1]                   \n","  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]               \n","  4                -1  3    161152  models.common.BottleneckCSP             [128, 128, 3]                 \n","  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]              \n","  6                -1  3    641792  models.common.BottleneckCSP             [256, 256, 3]                 \n","  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]              \n","  8                -1  1    656896  models.common.SPP                       [512, 512, [5, 9, 13]]        \n","  9                -1  1   1248768  models.common.BottleneckCSP             [512, 512, 1, False]          \n"," 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]              \n"," 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          \n"," 12           [-1, 6]  1         0  models.common.Concat                    [1]                           \n"," 13                -1  1    378624  models.common.BottleneckCSP             [512, 256, 1, False]          \n"," 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]              \n"," 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']          \n"," 16           [-1, 4]  1         0  models.common.Concat                    [1]                           \n"," 17                -1  1     95104  models.common.BottleneckCSP             [256, 128, 1, False]          \n"," 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]              \n"," 19          [-1, 14]  1         0  models.common.Concat                    [1]                           \n"," 20                -1  1    313088  models.common.BottleneckCSP             [256, 256, 1, False]          \n"," 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]              \n"," 22          [-1, 10]  1         0  models.common.Concat                    [1]                           \n"," 23                -1  1   1248768  models.common.BottleneckCSP             [512, 512, 1, False]          \n"," 24      [17, 20, 23]  1     94395  models.yolo.Detect                      [30, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]\n","custom_YOLOv5s summary: 283 layers, 7333307 parameters, 7333307 gradients, 17.2 GFLOPs\n","\n","\u001b[34m\u001b[1mAMP: \u001b[0mchecks passed ✅\n","Scaled weight_decay = 0.0005\n","\u001b[34m\u001b[1moptimizer:\u001b[0m SGD with parameter groups 59 weight (no decay), 70 weight, 62 bias\n","\u001b[34m\u001b[1malbumentations: \u001b[0mBlur(always_apply=False, p=0.01, blur_limit=(3, 7)), MedianBlur(always_apply=False, p=0.01, blur_limit=(3, 7)), ToGray(always_apply=False, p=0.01), CLAHE(always_apply=False, p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))\n","\u001b[34m\u001b[1mtrain: \u001b[0mScanning '/content/drive/MyDrive/plantdoc/yolov5/mosaic_inovation2-1/train/labels.cache' images and labels... 1539 found, 0 missing, 0 empty, 0 corrupt: 100% 1539/1539 [00:00\u003c?, ?it/s]\n","\u001b[34m\u001b[1mtrain: \u001b[0mCaching images (0.8GB ram): 100% 1539/1539 [00:11\u003c00:00, 136.82it/s]\n","\u001b[34m\u001b[1mval: \u001b[0mScanning '/content/drive/MyDrive/plantdoc/yolov5/mosaic_inovation2-1/valid/labels.cache' images and labels... 392 found, 0 missing, 0 empty, 0 corrupt: 100% 392/392 [00:00\u003c?, ?it/s]\n","\u001b[34m\u001b[1mval: \u001b[0mCaching images (0.2GB ram): 100% 392/392 [00:04\u003c00:00, 83.61it/s]\n","Plotting labels to runs/train/yolov5s_results5/labels.jpg... \n","\n","\u001b[34m\u001b[1mAutoAnchor: \u001b[0m5.49 anchors/target, 1.000 Best Possible Recall (BPR). Current anchors are a good fit to dataset ✅\n","Image sizes 416 train, 416 val\n","Using 2 dataloader workers\n","Logging results to \u001b[1mruns/train/yolov5s_results5\u001b[0m\n","Starting training for 10 epochs...\n","\n","     Epoch   gpu_mem       box       obj       cls    labels  img_size\n","       0/9     1.83G   0.09952    0.1255   0.08538        59       416: 100% 97/97 [00:29\u003c00:00,  3.34it/s]\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:04\u003c00:00,  2.89it/s]\n","                 all        392       1484   1.84e-05     0.0257   1.66e-05   3.89e-06\n","\n","     Epoch   gpu_mem       box       obj       cls    labels  img_size\n","       1/9     2.23G   0.09461    0.1315   0.08408        83       416: 100% 97/97 [00:23\u003c00:00,  4.15it/s]\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:05\u003c00:00,  2.31it/s]\n","                 all        392       1484   0.000289     0.0194   0.000155   3.41e-05\n","\n","     Epoch   gpu_mem       box       obj       cls    labels  img_size\n","       2/9     2.23G   0.09334    0.1302   0.08311        66       416: 100% 97/97 [00:22\u003c00:00,  4.27it/s]\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:06\u003c00:00,  2.01it/s]\n","                 all        392       1484    0.00151     0.0268   0.000824   0.000161\n","\n","     Epoch   gpu_mem       box       obj       cls    labels  img_size\n","       3/9     2.23G    0.0916    0.1333   0.08242        16       416: 100% 97/97 [00:23\u003c00:00,  4.14it/s]\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:11\u003c00:00,  1.12it/s]\n","                 all        392       1484    0.00396       0.19    0.00525    0.00123\n","\n","     Epoch   gpu_mem       box       obj       cls    labels  img_size\n","       4/9     2.23G   0.08809    0.1356   0.08153        60       416: 100% 97/97 [00:24\u003c00:00,  3.91it/s]\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:12\u003c00:00,  1.01it/s]\n","                 all        392       1484     0.0033      0.232    0.00408    0.00149\n","\n","     Epoch   gpu_mem       box       obj       cls    labels  img_size\n","       5/9     2.23G   0.08516    0.1349   0.08042        34       416: 100% 97/97 [00:23\u003c00:00,  4.17it/s]\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:11\u003c00:00,  1.17it/s]\n","                 all        392       1484    0.00314      0.243    0.00378    0.00133\n","\n","     Epoch   gpu_mem       box       obj       cls    labels  img_size\n","       6/9     2.23G   0.08222    0.1307   0.07968        73       416: 100% 97/97 [00:23\u003c00:00,  4.08it/s]\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95:   8% 1/13 [00:01\u003c00:16,  1.40s/it]WARNING: NMS time limit 1.260s exceeded\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:15\u003c00:00,  1.21s/it]\n","                 all        392       1484    0.00257       0.19    0.00224    0.00068\n","\n","     Epoch   gpu_mem       box       obj       cls    labels  img_size\n","       7/9     2.23G   0.08067    0.1343   0.07907        60       416: 100% 97/97 [00:25\u003c00:00,  3.86it/s]\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:09\u003c00:00,  1.38it/s]\n","                 all        392       1484    0.00424      0.379    0.00529    0.00173\n","\n","     Epoch   gpu_mem       box       obj       cls    labels  img_size\n","       8/9     2.23G   0.07832    0.1331   0.07893        63       416: 100% 97/97 [00:22\u003c00:00,  4.27it/s]\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:09\u003c00:00,  1.37it/s]\n","                 all        392       1484    0.00453      0.384    0.00807    0.00264\n","\n","     Epoch   gpu_mem       box       obj       cls    labels  img_size\n","       9/9     2.23G    0.0779     0.137   0.07839        48       416: 100% 97/97 [00:23\u003c00:00,  4.17it/s]\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:06\u003c00:00,  1.86it/s]\n","                 all        392       1484     0.0102      0.159     0.0199    0.00379\n","\n","10 epochs completed in 0.095 hours.\n","Optimizer stripped from runs/train/yolov5s_results5/weights/last.pt, 15.0MB\n","Optimizer stripped from runs/train/yolov5s_results5/weights/best.pt, 15.0MB\n","\n","Validating runs/train/yolov5s_results5/weights/best.pt...\n","Fusing layers... \n","custom_YOLOv5s summary: 232 layers, 7324731 parameters, 0 gradients, 17.0 GFLOPs\n","               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100% 13/13 [00:09\u003c00:00,  1.36it/s]\n","                 all        392       1484     0.0102      0.159     0.0199    0.00378\n","                   0        392         16    0.00431      0.375    0.00324    0.00112\n","                   1        392          8          0          0    0.00298   0.000838\n","                  10        392        237    0.00139    0.00422    0.00865    0.00271\n","                  12        392        123     0.0118     0.0813    0.00577    0.00185\n","                  13        392         72    0.00704      0.194    0.00407     0.0014\n","                  14        392        220     0.0377      0.327     0.0253    0.00889\n","                  15        392         34     0.0145     0.0882    0.00545    0.00309\n","                  17        392         76     0.0163      0.263     0.0105    0.00309\n","                  18        392          3          0          0   0.000492   0.000209\n","                  19        392          9    0.00401      0.222    0.00234    0.00113\n","                   2        392         11   0.000675      0.182   0.000564   0.000186\n","                  20        392        122     0.0453      0.213     0.0258    0.00753\n","                  21        392         25          0          0    0.00216   0.000702\n","                  22        392         24   0.000823     0.0417    0.00134   0.000365\n","                  23        392          7    0.00152      0.143    0.00073   0.000147\n","                  25        392         76    0.00234     0.0263    0.00206   0.000576\n","                  26        392         15    0.00251        0.2    0.00229   0.000648\n","                  28        392          5    0.00242        0.2    0.00805    0.00473\n","                  29        392          2          0          0    0.00175   0.000627\n","                   3        392         93     0.0701      0.172     0.0239    0.00851\n","                   4        392         59     0.0142     0.0339    0.00693    0.00276\n","                   5        392        106      0.015      0.311     0.0124    0.00525\n","                   6        392         31          0          0    0.00276    0.00105\n","                   7        392          3    0.00185      0.333      0.335     0.0365\n","                   8        392         76    0.00344      0.197     0.0023    0.00054\n","                   9        392         31    0.00818      0.516     0.0199    0.00378\n","Results saved to \u001b[1mruns/train/yolov5s_results5\u001b[0m\n","CPU times: user 1.92 s, sys: 313 ms, total: 2.24 s\n","Wall time: 6min 52s\n"]}],"source":["# train yolov5s on custom data for 100 epochs\n","# time its performance\n","%%time\n","%cd /content/drive/MyDrive/plantdoc/yolov5\n","!python train.py --img 416 --batch 16 --epochs 10 --data {dataset.location}/data.yaml --cfg ./models/custom_yolov5s.yaml --weights '' --name yolov5s_results  --cache"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"elapsed":4919,"status":"ok","timestamp":1663411553139,"user":{"displayName":"dan science","userId":"01806271324933827638"},"user_tz":-300},"id":"5IehfiKp1B2j","outputId":"beeb51ea-ab86-4490-de51-c6ec779999e0"},"outputs":[{"data":{"application/javascript":["\n","        (async () =\u003e {\n","            const url = new URL(await google.colab.kernel.proxyPort(6006, {'cache': true}));\n","            url.searchParams.set('tensorboardColab', 'true');\n","            const iframe = document.createElement('iframe');\n","            iframe.src = url;\n","            iframe.setAttribute('width', '100%');\n","            iframe.setAttribute('height', '800');\n","            iframe.setAttribute('frameborder', 0);\n","            document.body.appendChild(iframe);\n","        })();\n","    "],"text/plain":["\u003cIPython.core.display.Javascript object\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["# Start tensorboard\n","# Launch after you have started training\n","# logs save in the folder \"runs\"\n","%load_ext tensorboard\n","%tensorboard --logdir runs"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"csFOei9t1FW7"},"outputs":[],"source":["# we can also output some older school graphs if the tensor board isn't working for whatever reason... \n","from utils.plots import plot_results  # plot results.txt as results.png\n","Image(filename='/content/drive/MyDrive/plantdoc/yolov5/runs/train/yolov5s_results5/results.png', width=1000)  # view results.png"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"ll_95d661Vl7"},"outputs":[],"source":["# first, display our ground truth data\n","print(\"GROUND TRUTH TRAINING DATA:\")\n","Image(filename='/content/drive/MyDrive/plantdoc/yolov5/runs/train/yolov5s_results5/test_batch0_labels.jpg', width=900)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"7rF0B44H1lCY"},"outputs":[],"source":["# trained weights are saved by default in our weights folder\n","%ls runs/\n","%ls runs/train/yolov5s_results/weights"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"_AtrTsKV1p46"},"outputs":[],"source":["# when we ran this, we saw .007 second inference time. That is 140 FPS on a TESLA P100!\n","# use the best weights!\n","%cd /content/drive/MyDrive/plantdoc/yolov5\n","!python detect.py --weights runs/train/yolov5s_results/weights/best.pt --img 416 --conf 0.4 --source ../test/images"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"g68fDDx51wnm"},"outputs":[],"source":["#display inference on ALL test images\n","#this looks much better with longer training above\n","\n","import glob\n","from IPython.display import Image, display\n","\n","for imageName in glob.glob('/content/drive/MyDrive/plantdoc/yolov5/runs/detect/exp/*.jpg'): #assuming JPG\n","    display(Image(filename=imageName))\n","    print(\"\\n\")"]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyPBCsbn6zE8HZQAyciIycjw","mount_file_id":"16NgbyE1zlV7tdkiHxGjzcGzJzU39CDSf","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}